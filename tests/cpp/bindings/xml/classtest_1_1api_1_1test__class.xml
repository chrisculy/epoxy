<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.12">
  <compounddef id="classtest_1_1api_1_1test__class" kind="class" language="C++" prot="public">
    <compoundname>test::api::test_class</compoundname>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a74d47a8f8d09e4020f904ed2e27b81e0" prot="public" static="no" mutable="no">
        <type>void *</type>
        <definition>void* test::api::test_class::m_voidPointer</definition>
        <argsstring></argsstring>
        <name>m_voidPointer</name>
        <initializer>= reinterpret_cast&lt;void*&gt;(0x04)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="79" column="1" bodyfile="test_api.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a1de64175ffdf86c7289a6be50c9b01ab" prot="public" static="no" mutable="no">
        <type>const void *</type>
        <definition>const void* test::api::test_class::m_constVoidPointer</definition>
        <argsstring></argsstring>
        <name>m_constVoidPointer</name>
        <initializer>= reinterpret_cast&lt;const void*&gt;(0x03)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="80" column="1" bodyfile="test_api.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a0f1a09ab97f6273576ad37883aa61f2f" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool test::api::test_class::m_bool</definition>
        <argsstring></argsstring>
        <name>m_bool</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="82" column="1" bodyfile="test_api.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1ae2591c23d3758dbbd78153b3b39accf3" prot="public" static="no" mutable="no">
        <type>const bool</type>
        <definition>const bool test::api::test_class::m_constBool</definition>
        <argsstring></argsstring>
        <name>m_constBool</name>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="83" column="1" bodyfile="test_api.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1acd68d655ca9dfb815ca85d1adc560696" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char test::api::test_class::m_char</definition>
        <argsstring></argsstring>
        <name>m_char</name>
        <initializer>= &apos;a&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="85" column="1" bodyfile="test_api.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a2858d8880d08b181ad0064d97709227c" prot="public" static="no" mutable="no">
        <type>const char</type>
        <definition>const char test::api::test_class::m_constChar</definition>
        <argsstring></argsstring>
        <name>m_constChar</name>
        <initializer>= &apos;b&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="86" column="1" bodyfile="test_api.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a11cbce046242234d87519ee87e7c1867" prot="public" static="no" mutable="no">
        <type>char16_t</type>
        <definition>char16_t test::api::test_class::m_char16</definition>
        <argsstring></argsstring>
        <name>m_char16</name>
        <initializer>= u&apos;k&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="87" column="1" bodyfile="test_api.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a4f8e29c8502842b89635d806911dc51a" prot="public" static="no" mutable="no">
        <type>const char16_t</type>
        <definition>const char16_t test::api::test_class::m_constChar16</definition>
        <argsstring></argsstring>
        <name>m_constChar16</name>
        <initializer>= u&apos;l&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="88" column="1" bodyfile="test_api.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a1827448f042e1a2eb9bfd34dcb5ab1d7" prot="public" static="no" mutable="no">
        <type>char32_t</type>
        <definition>char32_t test::api::test_class::m_char32</definition>
        <argsstring></argsstring>
        <name>m_char32</name>
        <initializer>= U&apos;s&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="89" column="1" bodyfile="test_api.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1af58581c59d13c8f7298da3bda54fe4de" prot="public" static="no" mutable="no">
        <type>const char32_t</type>
        <definition>const char32_t test::api::test_class::m_constChar32</definition>
        <argsstring></argsstring>
        <name>m_constChar32</name>
        <initializer>= U&apos;t&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="90" column="1" bodyfile="test_api.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1ad6e96c8e024b62c6b7cf6caba85ac1fb" prot="public" static="no" mutable="no">
        <type>int8_t</type>
        <definition>int8_t test::api::test_class::m_int8</definition>
        <argsstring></argsstring>
        <name>m_int8</name>
        <initializer>= -128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="92" column="1" bodyfile="test_api.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a5dbbbb0a42a309351986d0704909239f" prot="public" static="no" mutable="no">
        <type>const int8_t</type>
        <definition>const int8_t test::api::test_class::m_constInt8</definition>
        <argsstring></argsstring>
        <name>m_constInt8</name>
        <initializer>= 127</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="93" column="1" bodyfile="test_api.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a769335f15702b2fb82d0b2cefa53a2d6" prot="public" static="no" mutable="no">
        <type>int16_t</type>
        <definition>int16_t test::api::test_class::m_int16</definition>
        <argsstring></argsstring>
        <name>m_int16</name>
        <initializer>= -32768</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="94" column="1" bodyfile="test_api.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a30b78d362a0fa201ccf7504bee28305a" prot="public" static="no" mutable="no">
        <type>const int16_t</type>
        <definition>const int16_t test::api::test_class::m_constInt16</definition>
        <argsstring></argsstring>
        <name>m_constInt16</name>
        <initializer>= 32767</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="95" column="1" bodyfile="test_api.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1abd2b94fc311f0dc0fac061a72f1e6ae6" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t test::api::test_class::m_int32</definition>
        <argsstring></argsstring>
        <name>m_int32</name>
        <initializer>= -2147483648</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="96" column="1" bodyfile="test_api.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a35e1bac77804fc2f95abb4581f793949" prot="public" static="no" mutable="no">
        <type>const int32_t</type>
        <definition>const int32_t test::api::test_class::m_constInt32</definition>
        <argsstring></argsstring>
        <name>m_constInt32</name>
        <initializer>= 2147483647</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="97" column="1" bodyfile="test_api.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a0f4c9f7ef6abdf66033183322575a4a6" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t test::api::test_class::m_uint8</definition>
        <argsstring></argsstring>
        <name>m_uint8</name>
        <initializer>= 254</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="99" column="1" bodyfile="test_api.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1aad6f791c2bfa7265091f81764b1501e7" prot="public" static="no" mutable="no">
        <type>const uint8_t</type>
        <definition>const uint8_t test::api::test_class::m_constUInt8</definition>
        <argsstring></argsstring>
        <name>m_constUInt8</name>
        <initializer>= 255</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="100" column="1" bodyfile="test_api.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1ab12c2337a1c813f9f2c257aa8b348686" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t test::api::test_class::m_uint16</definition>
        <argsstring></argsstring>
        <name>m_uint16</name>
        <initializer>= 65534</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="101" column="1" bodyfile="test_api.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1aa8f45a39f125816f4d754de6bea46f23" prot="public" static="no" mutable="no">
        <type>const uint16_t</type>
        <definition>const uint16_t test::api::test_class::m_constUInt16</definition>
        <argsstring></argsstring>
        <name>m_constUInt16</name>
        <initializer>= 65535</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="102" column="1" bodyfile="test_api.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1abd405eac741d92d10eb92d09858c9f94" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t test::api::test_class::m_uint32</definition>
        <argsstring></argsstring>
        <name>m_uint32</name>
        <initializer>= 4294967294</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="103" column="1" bodyfile="test_api.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a6bb462b2ae285c004689cce4eede3e93" prot="public" static="no" mutable="no">
        <type>const uint32_t</type>
        <definition>const uint32_t test::api::test_class::m_constUInt32</definition>
        <argsstring></argsstring>
        <name>m_constUInt32</name>
        <initializer>= 4294967295</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="104" column="1" bodyfile="test_api.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a3a97b760082c3abc94a2d6c48526708e" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float test::api::test_class::m_float</definition>
        <argsstring></argsstring>
        <name>m_float</name>
        <initializer>= 12.37f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="106" column="1" bodyfile="test_api.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1ae735def09c71656329fc58cb304e65c9" prot="public" static="no" mutable="no">
        <type>const float</type>
        <definition>const float test::api::test_class::m_constFloat</definition>
        <argsstring></argsstring>
        <name>m_constFloat</name>
        <initializer>= 123456.789f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="107" column="1" bodyfile="test_api.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a337488c9bf4e3cdf2f88f0cb6bd49669" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double test::api::test_class::m_double</definition>
        <argsstring></argsstring>
        <name>m_double</name>
        <initializer>= 42366.2342</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="108" column="1" bodyfile="test_api.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1ac27bc66c994675b09352f8945ca5842f" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double test::api::test_class::m_constDouble</definition>
        <argsstring></argsstring>
        <name>m_constDouble</name>
        <initializer>= 9442945.20435</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="109" column="1" bodyfile="test_api.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a84d2d17c23a4d124922d30e56ff4c2fc" prot="public" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string test::api::test_class::m_string</definition>
        <argsstring></argsstring>
        <name>m_string</name>
        <initializer>= &quot;Hi&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="111" column="1" bodyfile="test_api.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1ae7686187e243a6534fee853c6c805f33" prot="public" static="no" mutable="no">
        <type>const std::string</type>
        <definition>const std::string test::api::test_class::m_constString</definition>
        <argsstring></argsstring>
        <name>m_constString</name>
        <initializer>= &quot;Hello&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="112" column="1" bodyfile="test_api.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1aadd6a73d149e058c867031c2a37bda5a" prot="public" static="no" mutable="no">
        <type>test_enum</type>
        <definition>test_enum test::api::test_class::m_enum</definition>
        <argsstring></argsstring>
        <name>m_enum</name>
        <initializer>= RED</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="114" column="1" bodyfile="test_api.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a3edc334fabc4a392baeb2b2d99b9d633" prot="public" static="no" mutable="no">
        <type>const test_enum</type>
        <definition>const test_enum test::api::test_class::m_constEnum</definition>
        <argsstring></argsstring>
        <name>m_constEnum</name>
        <initializer>= BLUE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="115" column="1" bodyfile="test_api.h" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1aff8e345e1d652a00fe1e174ead87a119" prot="public" static="no" mutable="no">
        <type>test_enum_class</type>
        <definition>test_enum_class test::api::test_class::m_enumClass</definition>
        <argsstring></argsstring>
        <name>m_enumClass</name>
        <initializer>= test_enum_class::START</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="116" column="1" bodyfile="test_api.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a2c4122753fa43acda072b612fee59455" prot="public" static="no" mutable="no">
        <type>const test_enum_class</type>
        <definition>const test_enum_class test::api::test_class::m_constEnumClass</definition>
        <argsstring></argsstring>
        <name>m_constEnumClass</name>
        <initializer>= test_enum_class::FAST_FORWARD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="117" column="1" bodyfile="test_api.h" bodystart="117" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a3c1d7bb89b2353e69bd13ba48fed9d5b" prot="public" static="no" mutable="no">
        <type><ref refid="structtest_1_1api_1_1test__struct" kindref="compound">test_struct</ref></type>
        <definition>test_struct test::api::test_class::m_struct</definition>
        <argsstring></argsstring>
        <name>m_struct</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="119" column="1" bodyfile="test_api.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtest_1_1api_1_1test__class_1a7e3b72c65be0718edb5586c2992c0cea" prot="public" static="no" mutable="no">
        <type>const <ref refid="structtest_1_1api_1_1test__struct" kindref="compound">test_struct</ref></type>
        <definition>const test_struct test::api::test_class::m_constStruct</definition>
        <argsstring></argsstring>
        <name>m_constStruct</name>
        <initializer>= <ref refid="structtest_1_1api_1_1test__struct" kindref="compound">test_struct</ref>{ 3, 9 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="120" column="1" bodyfile="test_api.h" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtest_1_1api_1_1test__class_1a25b48ead19b59f1d803c3f5607479ac1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>test::api::test_class::test_class</definition>
        <argsstring>()=default</argsstring>
        <name>test_class</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1api_1_1test__class_1a6c18bb009abe3d1a9ab6fa4ebc07283d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>test::api::test_class::test_class</definition>
        <argsstring>(std::string testString)</argsstring>
        <name>test_class</name>
        <param>
          <type>std::string</type>
          <declname>testString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="45" column="1" bodyfile="test_api.h" bodystart="45" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1api_1_1test__class_1a5d73b3074ffeb905559ab307c9bb6459" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>test::api::test_class::test_class</definition>
        <argsstring>(std::string testString, int testInt)</argsstring>
        <name>test_class</name>
        <param>
          <type>std::string</type>
          <declname>testString</declname>
        </param>
        <param>
          <type>int</type>
          <declname>testInt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="50" column="1" bodyfile="test_api.h" bodystart="50" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1api_1_1test__class_1ac3a06c3ac2f01af4d5a036650ecf4519" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void test::api::test_class::function_void</definition>
        <argsstring>()</argsstring>
        <name>function_void</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="56" column="1" bodyfile="test_api.h" bodystart="56" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1api_1_1test__class_1a9108e7c03ae2482e8f3766b6bddfac7b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool test::api::test_class::function_bool</definition>
        <argsstring>() const</argsstring>
        <name>function_bool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="61" column="1" bodyfile="test_api.h" bodystart="61" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1api_1_1test__class_1abcf276da838930a53d850c36903677ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string test::api::test_class::function_string</definition>
        <argsstring>()</argsstring>
        <name>function_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="67" column="1" bodyfile="test_api.h" bodystart="67" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classtest_1_1api_1_1test__class_1af88e4bd2789566d2a571269f786a9d77" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int test::api::test_class::function_int</definition>
        <argsstring>(const std::string &amp;stringParam, int16_t int16Param)</argsstring>
        <name>function_int</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>stringParam</declname>
        </param>
        <param>
          <type>int16_t</type>
          <declname>int16Param</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="test_api.h" line="73" column="1" bodyfile="test_api.h" bodystart="73" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>test::api::test_struct</label>
        <link refid="structtest_1_1api_1_1test__struct"/>
      </node>
      <node id="1">
        <label>test::api::test_class</label>
        <link refid="classtest_1_1api_1_1test__class"/>
        <childnode refid="2" relation="usage">
          <edgelabel>m_struct</edgelabel>
          <edgelabel>m_constStruct</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="test_api.h" line="41" column="1" bodyfile="test_api.h" bodystart="40" bodyend="121"/>
    <listofallmembers>
      <member refid="classtest_1_1api_1_1test__class_1a9108e7c03ae2482e8f3766b6bddfac7b" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>function_bool</name></member>
      <member refid="classtest_1_1api_1_1test__class_1af88e4bd2789566d2a571269f786a9d77" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>function_int</name></member>
      <member refid="classtest_1_1api_1_1test__class_1abcf276da838930a53d850c36903677ba" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>function_string</name></member>
      <member refid="classtest_1_1api_1_1test__class_1ac3a06c3ac2f01af4d5a036650ecf4519" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>function_void</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a0f1a09ab97f6273576ad37883aa61f2f" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_bool</name></member>
      <member refid="classtest_1_1api_1_1test__class_1acd68d655ca9dfb815ca85d1adc560696" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_char</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a11cbce046242234d87519ee87e7c1867" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_char16</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a1827448f042e1a2eb9bfd34dcb5ab1d7" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_char32</name></member>
      <member refid="classtest_1_1api_1_1test__class_1ae2591c23d3758dbbd78153b3b39accf3" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constBool</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a2858d8880d08b181ad0064d97709227c" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constChar</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a4f8e29c8502842b89635d806911dc51a" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constChar16</name></member>
      <member refid="classtest_1_1api_1_1test__class_1af58581c59d13c8f7298da3bda54fe4de" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constChar32</name></member>
      <member refid="classtest_1_1api_1_1test__class_1ac27bc66c994675b09352f8945ca5842f" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constDouble</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a3edc334fabc4a392baeb2b2d99b9d633" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constEnum</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a2c4122753fa43acda072b612fee59455" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constEnumClass</name></member>
      <member refid="classtest_1_1api_1_1test__class_1ae735def09c71656329fc58cb304e65c9" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constFloat</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a30b78d362a0fa201ccf7504bee28305a" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constInt16</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a35e1bac77804fc2f95abb4581f793949" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constInt32</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a5dbbbb0a42a309351986d0704909239f" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constInt8</name></member>
      <member refid="classtest_1_1api_1_1test__class_1ae7686187e243a6534fee853c6c805f33" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constString</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a7e3b72c65be0718edb5586c2992c0cea" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constStruct</name></member>
      <member refid="classtest_1_1api_1_1test__class_1aa8f45a39f125816f4d754de6bea46f23" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constUInt16</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a6bb462b2ae285c004689cce4eede3e93" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constUInt32</name></member>
      <member refid="classtest_1_1api_1_1test__class_1aad6f791c2bfa7265091f81764b1501e7" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constUInt8</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a1de64175ffdf86c7289a6be50c9b01ab" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_constVoidPointer</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a337488c9bf4e3cdf2f88f0cb6bd49669" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_double</name></member>
      <member refid="classtest_1_1api_1_1test__class_1aadd6a73d149e058c867031c2a37bda5a" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_enum</name></member>
      <member refid="classtest_1_1api_1_1test__class_1aff8e345e1d652a00fe1e174ead87a119" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_enumClass</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a3a97b760082c3abc94a2d6c48526708e" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_float</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a769335f15702b2fb82d0b2cefa53a2d6" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_int16</name></member>
      <member refid="classtest_1_1api_1_1test__class_1abd2b94fc311f0dc0fac061a72f1e6ae6" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_int32</name></member>
      <member refid="classtest_1_1api_1_1test__class_1ad6e96c8e024b62c6b7cf6caba85ac1fb" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_int8</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a84d2d17c23a4d124922d30e56ff4c2fc" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_string</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a3c1d7bb89b2353e69bd13ba48fed9d5b" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_struct</name></member>
      <member refid="classtest_1_1api_1_1test__class_1ab12c2337a1c813f9f2c257aa8b348686" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_uint16</name></member>
      <member refid="classtest_1_1api_1_1test__class_1abd405eac741d92d10eb92d09858c9f94" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_uint32</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a0f4c9f7ef6abdf66033183322575a4a6" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_uint8</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a74d47a8f8d09e4020f904ed2e27b81e0" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>m_voidPointer</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a25b48ead19b59f1d803c3f5607479ac1" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>test_class</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a6c18bb009abe3d1a9ab6fa4ebc07283d" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>test_class</name></member>
      <member refid="classtest_1_1api_1_1test__class_1a5d73b3074ffeb905559ab307c9bb6459" prot="public" virt="non-virtual"><scope>test::api::test_class</scope><name>test_class</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
